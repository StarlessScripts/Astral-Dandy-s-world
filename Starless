local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()
local Window =
    WindUI:CreateWindow(
    {
        Title = "Dandy's world | AstralHub", -- UI Title
        Icon = "star", -- Url ou rbxassetid ou lucide
        Author = ".starless", -- Author & Creator
        Folder = "CloudHub", -- Pasta para salvar dados (e key)
        Size = UDim2.fromOffset(5860, 350), -- Tamanho da UI
        KeySystem = {
            -- Sistema de key
            Key = "AstralTeam", -- key
            Note = "The Key is AstralTeam", -- Nota
            URL = "https://github.com/Footagesus/WindUI", -- URL para obter a key (exemplo: Discord)
            SaveKey = true -- Salva a key na pasta especificada acima
        },
        Transparent = true, -- Transparência da UI
        Theme = "Dark", -- Tema da UI
        SideBarWidth = 170, -- Largura da barra lateral da UI (número)
        HasOutline = true -- Adiciona outlines à janela
    }
)
Window:EditOpenButton(
    {
        Title = "Open AstralHub",
        Icon = "star",
        Color = ColorSequence.new(Color3.fromHex("FFFFFF"), Color3.fromHex("000000"))
    }
)
local Tab =
    Window:Tab(
    {
        Title = "| Visual",
        Icon = "eye" -- lucide ou rbxassetid
    }
)

local Section =
    Tab:Section(
    {
        Title = "Generators",
        TextXAlignment = "Left",
        TextSize = 15 -- Tamanho padrão
    }
)

-- Variável global para controlar o estado do ESP das máquinas
local espMachinesEnabled = false

local Toggle =
    Tab:Toggle(
    {
        Title = "Esp Machines",
        Desc = "Esp all the machines",
        Value = false,
        Callback = function(state)
            espMachinesEnabled = state

            -- Som de ativação/desativação
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://478544929"
            sound.Volume = 4
            sound.Looped = false
            sound.Parent = workspace
            sound:Play()
            sound.Ended:Connect(
                function()
                    sound:Destroy()
                end
            )

            -- Notificação
            if state then
                WindUI:Notify(
                    {
                        Title = "ESP Machines Activated",
                        Content = "",
                        Duration = 2
                    }
                )
            else
                WindUI:Notify(
                    {
                        Title = "ESP Machines Disabled",
                        Content = "",
                        Duration = 2
                    }
                )
            end

            print("Toggle ESP Machines:", state)
        end
    }
)

local Section =
    Tab:Section(
    {
        Title = "Twisteds",
        TextXAlignment = "Left",
        TextSize = 15 -- Tamanho padrão
    }
)

-- Variável para o ESP dos monstros
local highlightEnabled = false

local Toggle =
    Tab:Toggle(
    {
        Title = "Esp Twisteds",
        Desc = "see the twisteds ",
        Value = false,
        Callback = function(state)
            highlightEnabled = state

            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://478544929"
            sound.Volume = 2
            sound.Looped = false
            sound.Parent = workspace
            sound:Play()
            sound.Ended:Connect(
                function()
                    sound:Destroy()
                end
            )

            if state then
                WindUI:Notify(
                    {
                        Title = "Highlights of the Twisteds activated",
                        Content = "",
                        Duration = 2
                    }
                )
            else
                WindUI:Notify(
                    {
                        Title = "Highlights of the disabled Twisteds",
                        Content = "",
                        Duration = 2
                    }
                )
            end

            print("Toggle Monster Highlights state:", tostring(state))
        end
    }
)

local Section =
    Tab:Section(
    {
        Title = "Items",
        TextXAlignment = "Left",
        TextSize = 15
    }
)

-- Variável para o ESP dos itens
local highlightItensEnabled = false

local Toggle =
    Tab:Toggle(
    {
        Title = "Esp items",
        Desc = "See the items on the floor",
        Value = false,
        Callback = function(state)
            highlightItensEnabled = state

            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://478544929"
            sound.Volume = 2
            sound.Looped = false
            sound.Parent = workspace
            sound:Play()
            sound.Ended:Connect(
                function()
                    sound:Destroy()
                end
            )

            if state then
                WindUI:Notify(
                    {
                        Title = "Highlights of the activated items",
                        Content = "",
                        Duration = 2
                    }
                )
            else
                WindUI:Notify(
                    {
                        Title = "Highlights of disabled items",
                        Content = "",
                        Duration = 2
                    }
                )
            end
        end
    }
)

local Tab =
    Window:Tab(
    {
        Title = "| Player Settings",
        Icon = "settings-2" -- lucide ou rbxassetid
    }
)

local Slider =
    Tab:Slider(
    {
        Title = "Speed TPWalk",
        Step = 0.1,
        Value = {
            Min = 0.2,
            Max = 5,
            Default = 0.3
        },
        Callback = function(value)
            _G.TPWalkSpeed = value
        end
    }
)

_G.TPWalkSpeed = 1.5

-- Função do TPWalk (já atualiza continuamente)
game:GetService("RunService").Heartbeat:Connect(
    function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local hrp = character.HumanoidRootPart
            local moveDirection = character.Humanoid.MoveDirection

            if moveDirection.Magnitude > 0 then
                hrp.CFrame = hrp.CFrame + (moveDirection * _G.TPWalkSpeed * 0.5)
            end
        end
    end
)

local player = game:GetService("Players").LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")

local function autoSkillCheck()
    local screenGui = player.PlayerGui:FindFirstChild("ScreenGui")
    if not screenGui then
        return
    end

    local menu = screenGui:FindFirstChild("Menu")
    if not menu then
        return
    end

    local skillCheckFrame = menu:FindFirstChild("SkillCheckFrame")
    if not skillCheckFrame then
        return
    end

    skillCheckFrame:GetPropertyChangedSignal("Visible"):Connect(
        function()
            if skillCheckFrame.Visible then
                local marker = skillCheckFrame:FindFirstChild("Marker")
                local goldArea = skillCheckFrame:FindFirstChild("GoldArea")

                if marker and goldArea then
                    while skillCheckFrame.Visible do
                        local markerPos = marker.AbsolutePosition
                        local goldAreaPos = goldArea.AbsolutePosition
                        local goldAreaSize = goldArea.AbsoluteSize

                        if markerPos.X >= goldAreaPos.X and markerPos.X <= (goldAreaPos.X + goldAreaSize.X) then
                            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
                            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Space, false, game)
                            break
                        end
                        task.wait(0.01)
                    end
                end
            end
        end
    )
end

local isAutoSkillCheckEnabled = false

local Toggle =
    Tab:Toggle(
    {
        Title = "Auto Skill Check",
        Desc = "Automatically press Space for skill checks",
        Value = isAutoSkillCheckEnabled,
        Callback = function(state)
            isAutoSkillCheckEnabled = state

            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://478544929"
            sound.Volume = 2
            sound.Looped = false
            sound.Parent = workspace
            sound:Play()
            sound.Ended:Connect(
                function()
                    sound:Destroy()
                end
            )

            if state then
                WindUI:Notify(
                    {
                        Title = "Auto Skill Check Active",
                        Content = "",
                        Duration = 2
                    }
                )
                autoSkillCheck()
                print("Auto Skill Check Ativado")
            else
                WindUI:Notify(
                    {
                        Title = "Auto Skill Check Disabled",
                        Content = "",
                        Duration = 2
                    }
                )
                print("Auto Skill Check Desativado")
            end
        end
    }
)

local Toggle =
    Tab:Toggle(
    {
        Title = "Fullbright",
        Desc = "Make your game shine",
        Value = false,
        Callback = function(state)
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://478544929"
            sound.Volume = 4
            sound.Looped = false
            sound.Parent = workspace
            sound:Play()
            sound.Ended:Connect(
                function()
                    sound:Destroy()
                end
            )

            if state then
                WindUI:Notify(
                    {
                        Title = "Fullbright Active",
                        Content = "",
                        Duration = 2
                    }
                )
                game.Lighting.Brightness = 2
                game.Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
                game.Lighting.Ambient = Color3.fromRGB(255, 255, 255)
                print("Fullbright Ativado")
            else
                WindUI:Notify(
                    {
                        Title = "Fullbright Disabled",
                        Content = "",
                        Duration = 2
                    }
                )
                game.Lighting.Brightness = 1
                game.Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
                game.Lighting.Ambient = Color3.fromRGB(128, 128, 128)
                print("Fullbright Desativado")
            end
        end
    }
)

local Tab =
    Window:Tab(
    {
        Title = "Info",
        Icon = "badge-alert" -- lucide or rbxassetid
    }
)

local Paragraph =
    Tab:Paragraph(
    {
        Title = "Machines",
        Desc = "Green | These are the machines that are not completed | Yellow | These are the machines that are already completed. "
    }
)

local Paragraph =
    Tab:Paragraph(
    {
        Title = "Twisted",
        Desc = "Red | These are the basic Twisteds"
    }
)

local Paragraph =
    Tab:Paragraph(
    {
        Title = "Item",
        Desc = "Blue | are the items that are on the floor"
    }
)

---------------------------------------------------------
-- FUNÇÕES DE ATUALIZAÇÃO DOS ESPs A CADA 0.1s
---------------------------------------------------------

-- Atualiza o ESP das machines (Generators)
local function updateEspMachines()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
    if not currentRoom then
        return
    end

    for _, room in ipairs(currentRoom:GetChildren()) do
        if room.Name:match("^Floor1Room") then
            local generatorsFolder = room:FindFirstChild("Generators")
            if generatorsFolder then
                for _, generator in ipairs(generatorsFolder:GetChildren()) do
                    if generator.Name == "Generator" then
                        local statsFolder = generator:FindFirstChild("Stats")
                        local completed = statsFolder and statsFolder:FindFirstChild("Completed")
                        local highlight = generator:FindFirstChild("GeneratorHighlight")

                        if espMachinesEnabled then
                            if completed and completed.Value == true then
                                if highlight and highlight.FillColor ~= Color3.new(1, 1, 0) then
                                    highlight:Destroy()
                                    highlight = nil
                                end
                                if not highlight then
                                    local newHighlight = Instance.new("Highlight")
                                    newHighlight.Name = "GeneratorHighlight"
                                    newHighlight.Adornee = generator
                                    newHighlight.FillColor = Color3.new(1, 1, 0) -- Amarelo
                                    newHighlight.OutlineColor = Color3.new(1, 1, 1) -- Branco
                                    newHighlight.FillTransparency = 0.5
                                    newHighlight.OutlineTransparency = 0
                                    newHighlight.Parent = generator
                                end
                            else
                                if highlight and highlight.FillColor ~= Color3.new(0, 1, 0) then
                                    highlight:Destroy()
                                    highlight = nil
                                end
                                if not highlight then
                                    local newHighlight = Instance.new("Highlight")
                                    newHighlight.Name = "GeneratorHighlight"
                                    newHighlight.Adornee = generator
                                    newHighlight.FillColor = Color3.new(0, 1, 0) -- Verde
                                    newHighlight.OutlineColor = Color3.new(1, 1, 1) -- Branco
                                    newHighlight.FillTransparency = 0.5
                                    newHighlight.OutlineTransparency = 0
                                    newHighlight.Parent = generator
                                end
                            end
                        else
                            if highlight then
                                highlight:Destroy()
                            end
                        end
                    end
                end
            end
        end
    end
end

-- Atualiza o ESP dos monsters (Twisteds)
local function updateMonsterHighlights()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
    if not currentRoom then
        return
    end

    for _, room in ipairs(currentRoom:GetChildren()) do
        if room.Name:match("^Floor1Room") then
            local monstersFolder = room:FindFirstChild("Monsters")
            if monstersFolder then
                for _, monster in ipairs(monstersFolder:GetChildren()) do
                    local highlight = monster:FindFirstChild("MonsterHighlight")
                    if highlightEnabled then
                        if not highlight then
                            local newHighlight = Instance.new("Highlight")
                            newHighlight.Name = "MonsterHighlight"
                            newHighlight.Adornee = monster
                            newHighlight.FillColor = Color3.new(1, 0, 0) -- Vermelho
                            newHighlight.OutlineColor = Color3.new(1, 1, 1) -- Branco
                            newHighlight.FillTransparency = 0.5
                            newHighlight.OutlineTransparency = 0
                            newHighlight.Parent = monster
                        end
                    else
                        if highlight then
                            highlight:Destroy()
                        end
                    end
                end
            end
        end
    end
end

-- Atualiza o ESP dos itens
local function updateItemHighlights()
    local currentRoom = workspace:FindFirstChild("CurrentRoom")
    if not currentRoom then
        return
    end

    for _, room in ipairs(currentRoom:GetChildren()) do
        if room.Name:match("^Floor1Room") then
            local itemsFolder = room:FindFirstChild("Items")
            if itemsFolder then
                for _, item in ipairs(itemsFolder:GetChildren()) do
                    if item:IsA("Model") or item:IsA("BasePart") then
                        local itemName = item.Name
                        local properties = item:FindFirstChild("Properties")
                        if properties and properties:IsA("StringValue") then
                            itemName = properties.Value
                        end
                        local highlight = item:FindFirstChild("ItemHighlight")
                        local billboard = item:FindFirstChild("ItemNameTag")
                        if highlightItensEnabled then
                            if not highlight then
                                highlight = Instance.new("Highlight")
                                highlight.Name = "ItemHighlight"
                                highlight.FillColor = Color3.fromRGB(0, 0, 255) -- Azul
                                highlight.FillTransparency = 0.5
                                highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- Branco
                                highlight.OutlineTransparency = 0
                                highlight.Adornee = item
                                highlight.Parent = item
                            end
                            if not billboard then
                                billboard = Instance.new("BillboardGui")
                                billboard.Name = "ItemNameTag"
                                billboard.Size = UDim2.new(0, 150, 0, 30)
                                billboard.AlwaysOnTop = true
                                billboard.StudsOffset = Vector3.new(0, 3, 0)
                                billboard.Adornee = item:IsA("Model") and item.PrimaryPart or item
                                billboard.Parent = item

                                local textLabel = Instance.new("TextLabel")
                                textLabel.Size = UDim2.new(1, 0, 1, 0)
                                textLabel.BackgroundTransparency = 1
                                textLabel.TextScaled = true
                                textLabel.TextColor3 = Color3.fromRGB(0, 0, 255) -- Azul
                                textLabel.TextStrokeTransparency = 0
                                textLabel.TextStrokeColor3 = Color3.new(1, 1, 1) -- Contorno Branco
                                textLabel.Text = itemName
                                textLabel.Parent = billboard
                            else
                                local textLabel = billboard:FindFirstChildOfClass("TextLabel")
                                if textLabel then
                                    textLabel.Text = itemName
                                end
                            end
                        else
                            if highlight then
                                highlight:Destroy()
                            end
                            if billboard then
                                billboard:Destroy()
                            end
                        end
                    end
                end
            end
        end
    end
end

-- Loop contínuo que atualiza os ESPs a cada 0.1 segundos
task.spawn(
    function()
        while task.wait(0.1) do
            updateEspMachines()
            updateMonsterHighlights()
            updateItemHighlights()
        end
    end
)
